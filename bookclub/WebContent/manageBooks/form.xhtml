<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	template="/resources/templates/default/decorator.xhtml">

	<ui:define name="title">
		<h:outputText value="Livros"
			rendered="#{(! manageBooksController.readOnly) and (manageBooksController.selectedEntity.id == null)}" />
		<h:outputText value="#{msgs['manageBooks.title.update']}"
			rendered="#{(! manageBooksController.readOnly) and (manageBooksController.selectedEntity.id != null)}" />
		<h:outputText value="#{msgs['manageBooks.title.retrieve']}"
			rendered="#{manageBooksController.readOnly}" />
	</ui:define>

	<ui:define name="body">
		<h1>
			<h:outputText value="Livros"
				rendered="#{(! manageBooksController.readOnly) and (manageBooksController.selectedEntity.id == null)}" />
			<h:outputText value="#{msgs['manageBooks.title.update']}"
				rendered="#{(! manageBooksController.readOnly) and (manageBooksController.selectedEntity.id != null)}" />
			<h:outputText value="#{msgs['manageBooks.title.retrieve']}"
				rendered="#{manageBooksController.readOnly}" />
		</h1>

		<div class="crud">
			<ui:decorate template="/resources/templates/default/form.xhtml">
				<h:form id="form">
					
					<h:outputText value="Titulo " />
					<p:inputText id="Titulo"
						value="#{manageBooksController.selectedEntity.titulo}">
						<f:ajax event="blur" listener="#{manageBooksController.setData}" 
						execute="@this" render="Sinopse Autor" />
					</p:inputText>

					<br />
					<h:outputText value="Autor " />
					<p:inputText id="Autor"
						value="#{manageBooksController.selectedEntity.autor}">
					</p:inputText>

					<br />
					<h:outputText value="Editora " />
					<p:inputText id="Editora"
						value="#{manageBooksController.selectedEntity.editora}">
					</p:inputText>

					<br />
					<h:outputText value="Sinopse " />
					
					<p:inputTextarea id="Sinopse"
						value="#{manageBooksController.selectedEntity.sinopse}">
					</p:inputTextarea>

					<ui:decorate
						template="/resources/templates/default/formbutton.xhtml">
						<h:panelGroup rendered="#{! manageBooksController.readOnly}">
							<p:commandButton action="#{manageBooksController.list}"
								value="#{msgs['crud.button.cancel']}" immediate="true"
								icon="buttonCancel" />
							<p:commandButton action="#{manageBooksController.save}"
								value="#{msgs['crud.button.save']}" icon="buttonOk"
								update=":form :globalMessages" />
							<p:hotkey bind="#{msgs['crud.hotkey.backToList']}"
								action="#{manageBooksController.list}" immediate="true" />
							<p:hotkey bind="#{msgs['crud.hotkey.save']}"
								action="#{manageBooksController.save}"
								update=":form :globalMessages" />
						</h:panelGroup>
						<h:panelGroup rendered="#{manageBooksController.readOnly}">
							<p:commandButton action="#{manageBooksController.list}"
								value="#{msgs['crud.button.back']}" immediate="true"
								icon="buttonBack" />
							<p:hotkey bind="#{msgs['crud.hotkey.backToList']}"
								action="#{manageBooksController.list}" immediate="true" />
						</h:panelGroup>
					</ui:decorate>
				</h:form>
			</ui:decorate>
		</div>
	</ui:define>

	<ui:define name="help">
		<h4>
			<h:outputText value="#{msgs['text.hotkeys']}" />
			:
		</h4>
		<ul>
			<li><b><h:outputText
						value="#{msgs['crud.hotkey.focusFirstField']}" /></b>: <h:outputText
					value="#{msgs['crud.help.hotkeys.focusFirstField']}" />;</li>
			<li><b><h:outputText
						value="#{msgs['crud.hotkey.backToList']}" /></b>: <h:outputText
					value="#{msgs['crud.help.hotkeys.backToList']}" />;</li>
			<li><b><h:outputText value="#{msgs['crud.hotkey.save']}" /></b>:
				<h:outputText value="#{msgs['crud.help.hotkeys.save']}" />.</li>
		</ul>
	</ui:define>
</ui:composition>